package pt.ist.rest.domain.service.test;

import java.util.ArrayList;
import java.util.List;

import mockit.Expectations;
import mockit.Mocked;

import org.junit.Test;

import pt.ist.chequerefeicao.local.ChequeRefeicaoLocal;
import pt.ist.registofatura.local.RegistoFaturaLocal;
import pt.ist.rest.invoiceregistry.InvoiceRegistry;
import pt.ist.rest.invoiceregistry.exception.Fatura;
import pt.ist.rest.invoiceregistry.exception.TotaisIncoerentes;
import pt.ist.rest.invoiceregistry.exception.TotaisIncoerentes_Exception;
import pt.ist.rest.mealcheck.MealCheck;
import pt.ist.rest.mealcheck.exception.InvalidCheckException;
import pt.ist.rest.presentation.server.RestServletImpl;
import pt.ist.rest.service.dto.FaturaDto;
import pt.ist.rest.service.dto.SimpleClientDto;

/**
 * The Class RegistoFaturaTest.
 */
public class ServicesTest extends RestServiceTest {

    /** The Constant RESTAURANT_NAME. */
    private static final String CLIENT_USERNAME = "zeze";
    private static final String CLIENT_PASSWORD = "z3z3";
    private static final String CLIENT_NAME = "Z\u00E9 ningu\u00E9m";
    private static final String CLIENT_EMAIL = "ze.ninguem@ist.utl.pt";
    private static final String CLIENT_ADRESS = "Lisboa, Portugal";
    private static final int CLIENT_NIF = 1111;

    @Mocked
    private InvoiceRegistry invoiceRegistry = new InvoiceRegistry(
            new RegistoFaturaLocal());

    @Mocked
    private MealCheck mealCheck = new MealCheck(new ChequeRefeicaoLocal());

    /**
     * Instantiates a new adds the plate to client cart service test.
     */
    public ServicesTest() {
        super();
    }

    @Test
    public void pagarCompraTest() throws Exception {
        RestServletImpl restServlet = new RestServletImpl();
        final String client = CLIENT_NAME;
        final List<String> checks = new ArrayList<String>();
        final Fatura fatura = new Fatura();
        final SimpleClientDto clientDto = new SimpleClientDto();

        new Expectations() {
            {
                mealCheck.sacar(client, checks);
                result = new InvalidCheckException();
                invoiceRegistry.comunicarFatura(fatura);
                result = new TotaisIncoerentes_Exception(
                        "Os totais sao incoerentes", new TotaisIncoerentes());
            }
        };

        FaturaDto factura = restServlet.confirmCart(clientDto, checks);
        assertNull(factura);
    }
}
